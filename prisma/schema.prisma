// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// $ npx prisma db push
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Admin {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updateAt       DateTime  @updatedAt
  favoriteIds    String[]  @db.ObjectId

  accounts Account[]
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  adminId           String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  admin Admin @relation(fields: [adminId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model TeamMember {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  surname String
  roles   Role[]
}

type Role {
  department String
  role       String
  bolidName  String
}

model Bolid {
  id                String @id @default(auto()) @map("_id") @db.ObjectId
  name              String @unique
  year              String
  short_description String
}
